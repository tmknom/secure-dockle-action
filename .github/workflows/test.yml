name: Test
on:
  workflow_dispatch:
  pull_request:
    paths: ["action.yml", ".github/workflows/test.yml"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: tmknom/checkout-action@v1

      - name: Setup
        run: |
          set -x
          cat <<EOF > "Dockerfile"
          FROM alpine:latest
          USER nonroot
          EOF

      - name: Exercise
        id: exercise
        uses: ./
        continue-on-error: true

      - name: Verify
        env:
          OUTCOME: ${{ steps.exercise.outcome }}
        run: |
          set -x
          test "${OUTCOME}" = "success"

  test-error:
    name: Test error
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: tmknom/checkout-action@v1

      - name: Setup
        run: |
          set -x
          cat <<EOF > ".github/Dockerfile.dev"
          FROM alpine:latest
          RUN apk add nginx
          EOF

      - name: Exercise
        id: exercise
        uses: ./
        with:
          dockerfile-path: .github/Dockerfile.dev
        continue-on-error: true

      - name: Verify
        env:
          OUTCOME: ${{ steps.exercise.outcome }}
        run: |
          set -x
          test "${OUTCOME}" = "failure"

  test-ignore:
    name: Test ignore
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: tmknom/checkout-action@v1

      - name: Setup
        run: |
          set -x
          cat <<EOF > "./Dockerfile"
          FROM alpine:latest
          RUN apk add nginx
          EOF

      - name: Exercise
        id: exercise
        uses: ./
        with:
          ignore: CIS-DI-0001 DKL-DI-0004
        continue-on-error: true

      - name: Verify
        env:
          OUTCOME: ${{ steps.exercise.outcome }}
        run: |
          set -x
          test "${OUTCOME}" = "success"

  test-exit-level:
    name: Test exit-level
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: tmknom/checkout-action@v1

      - name: Setup
        run: |
          set -x
          cat <<EOF > "./Dockerfile"
          FROM alpine:latest
          USER nonroot
          EOF

      - name: Exercise
        id: exercise
        uses: ./
        with:
          exit-level: info
        continue-on-error: true

      - name: Verify
        env:
          OUTCOME: ${{ steps.exercise.outcome }}
        run: |
          set -x
          test "${OUTCOME}" = "failure"
